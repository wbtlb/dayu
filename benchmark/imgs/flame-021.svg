<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="182" onload="init(evt)" viewBox="0 0 1200 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="182.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="165" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="165" > </text>
<g id="frames">
<g >
<title>0xffffffff81090aea (6 samples, 0.80%)</title><rect x="900.1" y="37" width="9.4" height="15.0" fill="rgb(222,158,54)" rx="2" ry="2" />
<text  x="903.09" y="47.5" ></text>
</g>
<g >
<title>builtin#4 (25 samples, 3.32%)</title><rect x="821.7" y="53" width="39.2" height="15.0" fill="rgb(230,36,53)" rx="2" ry="2" />
<text  x="824.74" y="63.5" >bui..</text>
</g>
<g >
<title>0xffffffff81090aea (17 samples, 2.26%)</title><rect x="531.8" y="85" width="26.7" height="15.0" fill="rgb(228,127,27)" rx="2" ry="2" />
<text  x="534.83" y="95.5" >0..</text>
</g>
<g >
<title>newtab (3 samples, 0.40%)</title><rect x="516.2" y="69" width="4.7" height="15.0" fill="rgb(210,225,19)" rx="2" ry="2" />
<text  x="519.16" y="79.5" ></text>
</g>
<g >
<title>resty.core.base:_M.ref_in_table (7 samples, 0.93%)</title><rect x="91.5" y="85" width="11.0" height="15.0" fill="rgb(215,15,21)" rx="2" ry="2" />
<text  x="94.49" y="95.5" ></text>
</g>
<g >
<title>balancer.lua:pick_server (179 samples, 23.77%)</title><rect x="650.9" y="85" width="280.5" height="15.0" fill="rgb(246,72,21)" rx="2" ry="2" />
<text  x="653.93" y="95.5" >balancer.lua:pick_server</text>
</g>
<g >
<title>lj_vm_exit_interp (14 samples, 1.86%)</title><rect x="63.3" y="69" width="21.9" height="15.0" fill="rgb(233,150,7)" rx="2" ry="2" />
<text  x="66.28" y="79.5" >l..</text>
</g>
<g >
<title>lj_vm_exit_interp (11 samples, 1.46%)</title><rect x="914.2" y="37" width="17.2" height="15.0" fill="rgb(252,16,29)" rx="2" ry="2" />
<text  x="917.20" y="47.5" ></text>
</g>
<g >
<title>resty.core.misc:mt.__index (3 samples, 0.40%)</title><rect x="520.9" y="85" width="4.7" height="15.0" fill="rgb(247,157,35)" rx="2" ry="2" />
<text  x="523.86" y="95.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (7 samples, 0.93%)</title><rect x="91.5" y="69" width="11.0" height="15.0" fill="rgb(222,130,2)" rx="2" ry="2" />
<text  x="94.49" y="79.5" ></text>
</g>
<g >
<title>lj_ff_next (3 samples, 0.40%)</title><rect x="846.8" y="37" width="4.7" height="15.0" fill="rgb(216,94,32)" rx="2" ry="2" />
<text  x="849.81" y="47.5" ></text>
</g>
<g >
<title>hashkey.isra.0 (3 samples, 0.40%)</title><rect x="699.5" y="69" width="4.7" height="15.0" fill="rgb(243,209,28)" rx="2" ry="2" />
<text  x="702.51" y="79.5" ></text>
</g>
<g >
<title>ngx_strncasecmp (3 samples, 0.40%)</title><rect x="1163.4" y="69" width="4.7" height="15.0" fill="rgb(253,154,12)" rx="2" ry="2" />
<text  x="1166.36" y="79.5" ></text>
</g>
<g >
<title>ngx_inet_addr.part.0 (17 samples, 2.26%)</title><rect x="1106.9" y="69" width="26.7" height="15.0" fill="rgb(220,87,51)" rx="2" ry="2" />
<text  x="1109.95" y="79.5" >n..</text>
</g>
<g >
<title>__GI_memset (4 samples, 0.53%)</title><rect x="1056.8" y="69" width="6.3" height="15.0" fill="rgb(214,68,41)" rx="2" ry="2" />
<text  x="1059.80" y="79.5" ></text>
</g>
<g >
<title>lj_BC_TGETS (14 samples, 1.86%)</title><rect x="871.9" y="53" width="21.9" height="15.0" fill="rgb(251,223,29)" rx="2" ry="2" />
<text  x="874.89" y="63.5" >l..</text>
</g>
<g >
<title>0xffffffff81090aea (24 samples, 3.19%)</title><rect x="776.3" y="53" width="37.6" height="15.0" fill="rgb(243,37,35)" rx="2" ry="2" />
<text  x="779.29" y="63.5" >0xf..</text>
</g>
<g >
<title>lj_BC_TGETS (6 samples, 0.80%)</title><rect x="730.8" y="69" width="9.5" height="15.0" fill="rgb(250,229,9)" rx="2" ry="2" />
<text  x="733.85" y="79.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (11 samples, 1.46%)</title><rect x="752.8" y="37" width="17.2" height="15.0" fill="rgb(222,164,41)" rx="2" ry="2" />
<text  x="755.79" y="47.5" ></text>
</g>
<g >
<title>gc_traverse_trace.part.3 (7 samples, 0.93%)</title><rect x="326.5" y="85" width="11.0" height="15.0" fill="rgb(224,191,44)" rx="2" ry="2" />
<text  x="329.55" y="95.5" ></text>
</g>
<g >
<title>T:resty.core.ctx:get_ctx_table (14 samples, 1.86%)</title><rect x="237.2" y="85" width="22.0" height="15.0" fill="rgb(208,138,42)" rx="2" ry="2" />
<text  x="240.22" y="95.5" >T..</text>
</g>
<g >
<title>lj_BC_TSETS (4 samples, 0.53%)</title><rect x="85.2" y="85" width="6.3" height="15.0" fill="rgb(239,75,52)" rx="2" ry="2" />
<text  x="88.22" y="95.5" ></text>
</g>
<g >
<title>ngx_http_lua_ngx_ctx_add_cleanup (11 samples, 1.46%)</title><rect x="467.6" y="69" width="17.2" height="15.0" fill="rgb(215,181,51)" rx="2" ry="2" />
<text  x="470.58" y="79.5" ></text>
</g>
<g >
<title>lj_BC_CALLT (3 samples, 0.40%)</title><rect x="867.2" y="53" width="4.7" height="15.0" fill="rgb(248,136,35)" rx="2" ry="2" />
<text  x="870.18" y="63.5" ></text>
</g>
<g >
<title>lj_vm_exit_interp (3 samples, 0.40%)</title><rect x="1185.3" y="85" width="4.7" height="15.0" fill="rgb(229,53,7)" rx="2" ry="2" />
<text  x="1188.30" y="95.5" ></text>
</g>
<g >
<title>0xffffffff816ab865 (4 samples, 0.53%)</title><rect x="832.7" y="37" width="6.3" height="15.0" fill="rgb(207,21,45)" rx="2" ry="2" />
<text  x="835.71" y="47.5" ></text>
</g>
<g >
<title>gc_sweep (39 samples, 5.18%)</title><rect x="265.4" y="85" width="61.1" height="15.0" fill="rgb(212,180,37)" rx="2" ry="2" />
<text  x="268.43" y="95.5" >gc_sweep</text>
</g>
<g >
<title>resty.roundrobin:find (20 samples, 2.66%)</title><rect x="900.1" y="53" width="31.3" height="15.0" fill="rgb(231,4,24)" rx="2" ry="2" />
<text  x="903.09" y="63.5" >re..</text>
</g>
<g >
<title>0xffffffff81090aea (9 samples, 1.20%)</title><rect x="10.0" y="101" width="14.1" height="15.0" fill="rgb(232,24,13)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>lj_BC_CALL (3 samples, 0.40%)</title><rect x="931.4" y="85" width="4.7" height="15.0" fill="rgb(254,97,9)" rx="2" ry="2" />
<text  x="934.43" y="95.5" ></text>
</g>
<g >
<title>lj_tab_newkey (3 samples, 0.40%)</title><rect x="53.9" y="101" width="4.7" height="15.0" fill="rgb(235,194,4)" rx="2" ry="2" />
<text  x="56.88" y="111.5" ></text>
</g>
<g >
<title>0xffffffff81099638 (3 samples, 0.40%)</title><rect x="1020.8" y="69" width="4.7" height="15.0" fill="rgb(228,73,47)" rx="2" ry="2" />
<text  x="1023.76" y="79.5" ></text>
</g>
<g >
<title>0xffffffff8105a2c6 (7 samples, 0.93%)</title><rect x="1009.8" y="69" width="11.0" height="15.0" fill="rgb(252,6,51)" rx="2" ry="2" />
<text  x="1012.79" y="79.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (9 samples, 1.20%)</title><rect x="453.5" y="69" width="14.1" height="15.0" fill="rgb(230,225,53)" rx="2" ry="2" />
<text  x="456.48" y="79.5" ></text>
</g>
<g >
<title>resty.core.ctx:get_ctx_table (16 samples, 2.12%)</title><rect x="970.6" y="85" width="25.1" height="15.0" fill="rgb(248,72,23)" rx="2" ry="2" />
<text  x="973.61" y="95.5" >r..</text>
</g>
<g >
<title>T:resty.core.base:_M.ref_in_table (14 samples, 1.86%)</title><rect x="63.3" y="85" width="21.9" height="15.0" fill="rgb(220,119,7)" rx="2" ry="2" />
<text  x="66.28" y="95.5" >T..</text>
</g>
<g >
<title>resty.core.misc:mt.__index (270 samples, 35.86%)</title><rect x="102.5" y="101" width="423.1" height="15.0" fill="rgb(252,173,51)" rx="2" ry="2" />
<text  x="105.46" y="111.5" >resty.core.misc:mt.__index</text>
</g>
<g >
<title>0xffffffff8105a2c6 (4 samples, 0.53%)</title><rect x="102.5" y="85" width="6.2" height="15.0" fill="rgb(207,214,30)" rx="2" ry="2" />
<text  x="105.46" y="95.5" ></text>
</g>
<g >
<title>lj_vm_exit_interp (3 samples, 0.40%)</title><rect x="1000.4" y="53" width="4.7" height="15.0" fill="rgb(245,21,49)" rx="2" ry="2" />
<text  x="1003.39" y="63.5" ></text>
</g>
<g >
<title>0xffffffff816ab865 (12 samples, 1.59%)</title><rect x="171.4" y="85" width="18.8" height="15.0" fill="rgb(253,165,24)" rx="2" ry="2" />
<text  x="174.41" y="95.5" ></text>
</g>
<g >
<title>lj_meta_tget (3 samples, 0.40%)</title><rect x="740.3" y="69" width="4.7" height="15.0" fill="rgb(223,145,6)" rx="2" ry="2" />
<text  x="743.25" y="79.5" ></text>
</g>
<g >
<title>lj_alloc_free (34 samples, 4.52%)</title><rect x="337.5" y="85" width="53.3" height="15.0" fill="rgb(219,37,25)" rx="2" ry="2" />
<text  x="340.52" y="95.5" >lj_al..</text>
</g>
<g >
<title>0xffffffff81090aea (5 samples, 0.66%)</title><rect x="683.8" y="53" width="7.9" height="15.0" fill="rgb(206,133,46)" rx="2" ry="2" />
<text  x="686.84" y="63.5" ></text>
</g>
<g >
<title>0xffffffff810997ea (3 samples, 0.40%)</title><rect x="166.7" y="85" width="4.7" height="15.0" fill="rgb(216,195,26)" rx="2" ry="2" />
<text  x="169.71" y="95.5" ></text>
</g>
<g >
<title>=access_by_lua(nginx.conf:160):0 (329 samples, 43.69%)</title><rect x="10.0" y="117" width="515.6" height="15.0" fill="rgb(243,138,44)" rx="2" ry="2" />
<text  x="13.00" y="127.5" >=access_by_lua(nginx.conf:160):0</text>
</g>
<g >
<title>0xffffffff81090aea (11 samples, 1.46%)</title><rect x="190.2" y="69" width="17.3" height="15.0" fill="rgb(248,67,43)" rx="2" ry="2" />
<text  x="193.21" y="79.5" ></text>
</g>
<g >
<title>lj_strscan_scan (10 samples, 1.33%)</title><rect x="1072.5" y="69" width="15.6" height="15.0" fill="rgb(212,135,35)" rx="2" ry="2" />
<text  x="1075.47" y="79.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (3 samples, 0.40%)</title><rect x="58.6" y="85" width="4.7" height="15.0" fill="rgb(205,40,29)" rx="2" ry="2" />
<text  x="61.58" y="95.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (3 samples, 0.40%)</title><rect x="995.7" y="53" width="4.7" height="15.0" fill="rgb(243,209,13)" rx="2" ry="2" />
<text  x="998.68" y="63.5" ></text>
</g>
<g >
<title>resty.roundrobin:find (99 samples, 13.15%)</title><rect x="776.3" y="69" width="155.1" height="15.0" fill="rgb(217,44,36)" rx="2" ry="2" />
<text  x="779.29" y="79.5" >resty.roundrobin:find</text>
</g>
<g >
<title>resty.core.ctx:get_ctx_table (28 samples, 3.72%)</title><rect x="58.6" y="101" width="43.9" height="15.0" fill="rgb(252,159,32)" rx="2" ry="2" />
<text  x="61.58" y="111.5" >rest..</text>
</g>
<g >
<title>ngx_http_lua_ffi_now (3 samples, 0.40%)</title><rect x="1005.1" y="53" width="4.7" height="15.0" fill="rgb(245,222,35)" rx="2" ry="2" />
<text  x="1008.09" y="63.5" ></text>
</g>
<g >
<title>lj_tab_newkey (4 samples, 0.53%)</title><rect x="893.8" y="53" width="6.3" height="15.0" fill="rgb(206,185,12)" rx="2" ry="2" />
<text  x="896.82" y="63.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (4 samples, 0.53%)</title><rect x="770.0" y="37" width="6.3" height="15.0" fill="rgb(220,29,44)" rx="2" ry="2" />
<text  x="773.03" y="47.5" ></text>
</g>
<g >
<title>__memcpy_ssse3_back (6 samples, 0.80%)</title><rect x="641.5" y="85" width="9.4" height="15.0" fill="rgb(211,39,53)" rx="2" ry="2" />
<text  x="644.53" y="95.5" ></text>
</g>
<g >
<title>=balancer_by_lua:0 (424 samples, 56.31%)</title><rect x="525.6" y="117" width="664.4" height="15.0" fill="rgb(221,132,24)" rx="2" ry="2" />
<text  x="528.56" y="127.5" >=balancer_by_lua:0</text>
</g>
<g >
<title>0xffffffff81090aea (50 samples, 6.64%)</title><rect x="563.2" y="69" width="78.3" height="15.0" fill="rgb(242,208,5)" rx="2" ry="2" />
<text  x="566.17" y="79.5" >0xfffffff..</text>
</g>
<g >
<title>ngx_pool_cleanup_add (4 samples, 0.53%)</title><rect x="484.8" y="69" width="6.3" height="15.0" fill="rgb(225,201,16)" rx="2" ry="2" />
<text  x="487.82" y="79.5" ></text>
</g>
<g >
<title>0xffffffff81099600 (3 samples, 0.40%)</title><rect x="909.5" y="37" width="4.7" height="15.0" fill="rgb(241,7,33)" rx="2" ry="2" />
<text  x="912.50" y="47.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (14 samples, 1.86%)</title><rect x="237.2" y="69" width="22.0" height="15.0" fill="rgb(247,16,36)" rx="2" ry="2" />
<text  x="240.22" y="79.5" >0..</text>
</g>
<g >
<title>ngx_http_lua_ffi_balancer_set_current_peer (12 samples, 1.59%)</title><rect x="1088.1" y="69" width="18.8" height="15.0" fill="rgb(210,95,12)" rx="2" ry="2" />
<text  x="1091.14" y="79.5" ></text>
</g>
<g >
<title>hashkey.isra.0 (5 samples, 0.66%)</title><rect x="839.0" y="37" width="7.8" height="15.0" fill="rgb(220,159,1)" rx="2" ry="2" />
<text  x="841.98" y="47.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (3 samples, 0.40%)</title><rect x="520.9" y="69" width="4.7" height="15.0" fill="rgb(215,102,2)" rx="2" ry="2" />
<text  x="523.86" y="79.5" ></text>
</g>
<g >
<title>0xffffffff810997ea (3 samples, 0.40%)</title><rect x="558.5" y="85" width="4.7" height="15.0" fill="rgb(236,39,44)" rx="2" ry="2" />
<text  x="561.47" y="95.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (7 samples, 0.93%)</title><rect x="821.7" y="37" width="11.0" height="15.0" fill="rgb(228,58,53)" rx="2" ry="2" />
<text  x="824.74" y="47.5" ></text>
</g>
<g >
<title>lj_BC_CALL (10 samples, 1.33%)</title><rect x="704.2" y="69" width="15.7" height="15.0" fill="rgb(228,173,7)" rx="2" ry="2" />
<text  x="707.21" y="79.5" ></text>
</g>
<g >
<title>balancer.lua:_M.balancer_run (421 samples, 55.91%)</title><rect x="525.6" y="101" width="659.7" height="15.0" fill="rgb(252,132,31)" rx="2" ry="2" />
<text  x="528.56" y="111.5" >balancer.lua:_M.balancer_run</text>
</g>
<g >
<title>__memcpy_ssse3_back (6 samples, 0.80%)</title><rect x="1063.1" y="69" width="9.4" height="15.0" fill="rgb(219,185,38)" rx="2" ry="2" />
<text  x="1066.07" y="79.5" ></text>
</g>
<g >
<title>lj_str_new (9 samples, 1.20%)</title><rect x="956.5" y="85" width="14.1" height="15.0" fill="rgb(236,16,19)" rx="2" ry="2" />
<text  x="959.51" y="95.5" ></text>
</g>
<g >
<title>lj_tab_get (3 samples, 0.40%)</title><rect x="49.2" y="101" width="4.7" height="15.0" fill="rgb(234,46,51)" rx="2" ry="2" />
<text  x="52.18" y="111.5" ></text>
</g>
<g >
<title>resty.core.base:_M.ref_in_table (32 samples, 4.25%)</title><rect x="440.9" y="85" width="50.2" height="15.0" fill="rgb(240,221,48)" rx="2" ry="2" />
<text  x="443.94" y="95.5" >resty..</text>
</g>
<g >
<title>balancer.lua:get (10 samples, 1.33%)</title><rect x="683.8" y="69" width="15.7" height="15.0" fill="rgb(216,0,21)" rx="2" ry="2" />
<text  x="686.84" y="79.5" ></text>
</g>
<g >
<title>lj_meta_cat (4 samples, 0.53%)</title><rect x="950.2" y="85" width="6.3" height="15.0" fill="rgb(224,11,14)" rx="2" ry="2" />
<text  x="953.24" y="95.5" ></text>
</g>
<g >
<title>lj_BC_TSETS (3 samples, 0.40%)</title><rect x="38.2" y="101" width="4.7" height="15.0" fill="rgb(225,117,3)" rx="2" ry="2" />
<text  x="41.21" y="111.5" ></text>
</g>
<g >
<title>T:resty.roundrobin:find (50 samples, 6.64%)</title><rect x="563.2" y="85" width="78.3" height="15.0" fill="rgb(216,110,22)" rx="2" ry="2" />
<text  x="566.17" y="95.5" >T:resty.r..</text>
</g>
<g >
<title>T:resty.lrucache:_M.get (4 samples, 0.53%)</title><rect x="770.0" y="53" width="6.3" height="15.0" fill="rgb(228,128,7)" rx="2" ry="2" />
<text  x="773.03" y="63.5" ></text>
</g>
<g >
<title>lj_alloc_malloc (13 samples, 1.73%)</title><rect x="491.1" y="69" width="20.4" height="15.0" fill="rgb(227,125,19)" rx="2" ry="2" />
<text  x="494.09" y="79.5" ></text>
</g>
<g >
<title>0xffffffff816ab865 (3 samples, 0.40%)</title><rect x="679.1" y="69" width="4.7" height="15.0" fill="rgb(207,75,16)" rx="2" ry="2" />
<text  x="682.14" y="79.5" ></text>
</g>
<g >
<title>0xffffffff816ab865 (13 samples, 1.73%)</title><rect x="1036.4" y="69" width="20.4" height="15.0" fill="rgb(237,78,31)" rx="2" ry="2" />
<text  x="1039.43" y="79.5" ></text>
</g>
<g >
<title>T:ngx.balancer:_M.set_more_tries (11 samples, 1.46%)</title><rect x="752.8" y="53" width="17.2" height="15.0" fill="rgb(250,59,34)" rx="2" ry="2" />
<text  x="755.79" y="63.5" ></text>
</g>
<g >
<title>T::0 (30 samples, 3.98%)</title><rect x="190.2" y="85" width="47.0" height="15.0" fill="rgb(206,202,41)" rx="2" ry="2" />
<text  x="193.21" y="95.5" >T::0</text>
</g>
<g >
<title>lj_BC_TGETS (9 samples, 1.20%)</title><rect x="936.1" y="85" width="14.1" height="15.0" fill="rgb(253,9,39)" rx="2" ry="2" />
<text  x="939.14" y="95.5" ></text>
</g>
<g >
<title>0xffffffff816ab865 (3 samples, 0.40%)</title><rect x="24.1" y="101" width="4.7" height="15.0" fill="rgb(208,193,25)" rx="2" ry="2" />
<text  x="27.10" y="111.5" ></text>
</g>
<g >
<title>gc_sweep (10 samples, 1.33%)</title><rect x="207.5" y="69" width="15.6" height="15.0" fill="rgb(233,90,31)" rx="2" ry="2" />
<text  x="210.45" y="79.5" ></text>
</g>
<g >
<title>lj_alloc_free (6 samples, 0.80%)</title><rect x="223.1" y="69" width="9.4" height="15.0" fill="rgb(252,162,49)" rx="2" ry="2" />
<text  x="226.12" y="79.5" ></text>
</g>
<g >
<title>all (753 samples, 100%)</title><rect x="10.0" y="133" width="1180.0" height="15.0" fill="rgb(218,34,16)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>lj_meta_tget (4 samples, 0.53%)</title><rect x="42.9" y="101" width="6.3" height="15.0" fill="rgb(228,186,41)" rx="2" ry="2" />
<text  x="45.91" y="111.5" ></text>
</g>
<g >
<title>resty.roundrobin:find (112 samples, 14.87%)</title><rect x="1009.8" y="85" width="175.5" height="15.0" fill="rgb(246,229,15)" rx="2" ry="2" />
<text  x="1012.79" y="95.5" >resty.roundrobin:find</text>
</g>
<g >
<title>0xffffffff81090aea (10 samples, 1.33%)</title><rect x="970.6" y="69" width="15.7" height="15.0" fill="rgb(233,43,0)" rx="2" ry="2" />
<text  x="973.61" y="79.5" ></text>
</g>
<g >
<title>0x7ff0fdd0ba09 (8 samples, 1.06%)</title><rect x="440.9" y="69" width="12.6" height="15.0" fill="rgb(234,4,49)" rx="2" ry="2" />
<text  x="443.94" y="79.5" ></text>
</g>
<g >
<title>0xffffffff8105a2c6 (4 samples, 0.53%)</title><rect x="525.6" y="85" width="6.2" height="15.0" fill="rgb(230,30,22)" rx="2" ry="2" />
<text  x="528.56" y="95.5" ></text>
</g>
<g >
<title>resty.roundrobin:find (3 samples, 0.40%)</title><rect x="1185.3" y="101" width="4.7" height="15.0" fill="rgb(230,190,39)" rx="2" ry="2" />
<text  x="1188.30" y="111.5" ></text>
</g>
<g >
<title>0xffffffff816ab865 (5 samples, 0.66%)</title><rect x="813.9" y="53" width="7.8" height="15.0" fill="rgb(206,207,47)" rx="2" ry="2" />
<text  x="816.90" y="63.5" ></text>
</g>
<g >
<title>resty.lrucache:_M.get (9 samples, 1.20%)</title><rect x="995.7" y="69" width="14.1" height="15.0" fill="rgb(215,212,22)" rx="2" ry="2" />
<text  x="998.68" y="79.5" ></text>
</g>
<g >
<title>lj_tab_get (5 samples, 0.66%)</title><rect x="691.7" y="53" width="7.8" height="15.0" fill="rgb(239,164,48)" rx="2" ry="2" />
<text  x="694.67" y="63.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (18 samples, 2.39%)</title><rect x="650.9" y="69" width="28.2" height="15.0" fill="rgb(209,38,5)" rx="2" ry="2" />
<text  x="653.93" y="79.5" >0..</text>
</g>
<g >
<title>0xffffffff81588419 (3 samples, 0.40%)</title><rect x="1031.7" y="69" width="4.7" height="15.0" fill="rgb(238,173,22)" rx="2" ry="2" />
<text  x="1034.73" y="79.5" ></text>
</g>
<g >
<title>lj_tab_next (6 samples, 0.80%)</title><rect x="851.5" y="37" width="9.4" height="15.0" fill="rgb(213,30,36)" rx="2" ry="2" />
<text  x="854.51" y="47.5" ></text>
</g>
<g >
<title>ngx_parse_url (19 samples, 2.52%)</title><rect x="1133.6" y="69" width="29.8" height="15.0" fill="rgb(245,49,28)" rx="2" ry="2" />
<text  x="1136.59" y="79.5" >ng..</text>
</g>
<g >
<title>ngx_vslprintf (11 samples, 1.46%)</title><rect x="1168.1" y="69" width="17.2" height="15.0" fill="rgb(243,45,6)" rx="2" ry="2" />
<text  x="1171.06" y="79.5" ></text>
</g>
<g >
<title>resty.lrucache:_M.get (9 samples, 1.20%)</title><rect x="995.7" y="85" width="14.1" height="15.0" fill="rgb(226,225,4)" rx="2" ry="2" />
<text  x="998.68" y="95.5" ></text>
</g>
<g >
<title>propagatemark (32 samples, 4.25%)</title><rect x="390.8" y="85" width="50.1" height="15.0" fill="rgb(226,44,45)" rx="2" ry="2" />
<text  x="393.80" y="95.5" >propa..</text>
</g>
<g >
<title>propagatemark (3 samples, 0.40%)</title><rect x="232.5" y="69" width="4.7" height="15.0" fill="rgb(239,76,34)" rx="2" ry="2" />
<text  x="235.52" y="79.5" ></text>
</g>
<g >
<title>lj_BC_JLOOP (6 samples, 0.80%)</title><rect x="28.8" y="101" width="9.4" height="15.0" fill="rgb(252,172,45)" rx="2" ry="2" />
<text  x="31.80" y="111.5" ></text>
</g>
<g >
<title>resty.lrucache:_M.get (4 samples, 0.53%)</title><rect x="770.0" y="69" width="6.3" height="15.0" fill="rgb(233,23,11)" rx="2" ry="2" />
<text  x="773.03" y="79.5" ></text>
</g>
<g >
<title>lj_mem_realloc (3 samples, 0.40%)</title><rect x="511.5" y="69" width="4.7" height="15.0" fill="rgb(246,77,20)" rx="2" ry="2" />
<text  x="514.46" y="79.5" ></text>
</g>
<g >
<title>resty.core.ctx:get_ctx_table (19 samples, 2.52%)</title><rect x="491.1" y="85" width="29.8" height="15.0" fill="rgb(226,117,45)" rx="2" ry="2" />
<text  x="494.09" y="95.5" >re..</text>
</g>
<g >
<title>hashkey.isra.0 (4 samples, 0.53%)</title><rect x="860.9" y="53" width="6.3" height="15.0" fill="rgb(227,191,7)" rx="2" ry="2" />
<text  x="863.92" y="63.5" ></text>
</g>
<g >
<title>0xffffffff81090aea (37 samples, 4.91%)</title><rect x="108.7" y="85" width="58.0" height="15.0" fill="rgb(252,8,34)" rx="2" ry="2" />
<text  x="111.73" y="95.5" >0xffff..</text>
</g>
<g >
<title>gc_onestep (4 samples, 0.53%)</title><rect x="259.2" y="85" width="6.2" height="15.0" fill="rgb(238,228,40)" rx="2" ry="2" />
<text  x="262.16" y="95.5" ></text>
</g>
<g >
<title>lj_BC_TGETS (6 samples, 0.80%)</title><rect x="986.3" y="69" width="9.4" height="15.0" fill="rgb(234,36,19)" rx="2" ry="2" />
<text  x="989.28" y="79.5" ></text>
</g>
<g >
<title>ngx.balancer:_M.set_more_tries (11 samples, 1.46%)</title><rect x="752.8" y="69" width="17.2" height="15.0" fill="rgb(253,14,38)" rx="2" ry="2" />
<text  x="755.79" y="79.5" ></text>
</g>
<g >
<title>0xffffffff81586c62 (4 samples, 0.53%)</title><rect x="1025.5" y="69" width="6.2" height="15.0" fill="rgb(226,134,35)" rx="2" ry="2" />
<text  x="1028.46" y="79.5" ></text>
</g>
<g >
<title>lj_BC_JLOOP (7 samples, 0.93%)</title><rect x="719.9" y="69" width="10.9" height="15.0" fill="rgb(218,36,28)" rx="2" ry="2" />
<text  x="722.88" y="79.5" ></text>
</g>
<g >
<title>lj_tab_get (5 samples, 0.66%)</title><rect x="745.0" y="69" width="7.8" height="15.0" fill="rgb(208,30,15)" rx="2" ry="2" />
<text  x="747.95" y="79.5" ></text>
</g>
</g>
</svg>
